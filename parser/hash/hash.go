/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: parser/hash/hash.i

package hash

/*
#define intgo swig_intgo
typedef void *swig_voidp;

#include <stdint.h>


typedef long long intgo;
typedef unsigned long long uintgo;



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;


extern void _wrap_Swig_free_hash_9b6d006aa466106b(uintptr_t arg1);
extern uintptr_t _wrap_Swig_malloc_hash_9b6d006aa466106b(swig_intgo arg1);
extern uintptr_t _wrap_new_Hash_hash_9b6d006aa466106b(void);
extern void _wrap_delete_Hash_hash_9b6d006aa466106b(uintptr_t arg1);
extern void _wrap_Hash_result_set_hash_9b6d006aa466106b(uintptr_t arg1, swig_voidp arg2);
extern swig_voidp _wrap_Hash_result_get_hash_9b6d006aa466106b(uintptr_t arg1);
extern swig_voidp _wrap_Hash_verushash_hash_9b6d006aa466106b(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern swig_voidp _wrap_Hash_verushash_v2_hash_9b6d006aa466106b(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern swig_voidp _wrap_Hash_verushash_v2b_hash_9b6d006aa466106b(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern swig_voidp _wrap_Hash_verushash_v2b1_hash_9b6d006aa466106b(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
#undef intgo
*/
import "C"

import "unsafe"
import _ "runtime/cgo"
import "sync"


type _ unsafe.Pointer



var Swig_escape_always_false bool
var Swig_escape_val interface{}


type _swig_fnptr *byte
type _swig_memberptr *byte


type _ sync.Mutex

func Swig_free(arg1 uintptr) {
	_swig_i_0 := arg1
	C._wrap_Swig_free_hash_9b6d006aa466106b(C.uintptr_t(_swig_i_0))
}

func Swig_malloc(arg1 int) (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	swig_r = (uintptr)(C._wrap_Swig_malloc_hash_9b6d006aa466106b(C.swig_intgo(_swig_i_0)))
	return swig_r
}

type SwigcptrHash uintptr

func (p SwigcptrHash) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrHash) SwigIsHash() {
}

func NewHash() (_swig_ret Hash) {
	var swig_r Hash
	swig_r = (Hash)(SwigcptrHash(C._wrap_new_Hash_hash_9b6d006aa466106b()))
	return swig_r
}

func DeleteHash(arg1 Hash) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Hash_hash_9b6d006aa466106b(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrHash) SetResult(arg2 *byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Hash_result_set_hash_9b6d006aa466106b(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1))
}

func (arg1 SwigcptrHash) GetResult() (_swig_ret *byte) {
	var swig_r *byte
	_swig_i_0 := arg1
	swig_r = (*byte)(C._wrap_Hash_result_get_hash_9b6d006aa466106b(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrHash) Verushash(arg2 uintptr, arg3 int) (_swig_ret *byte) {
	var swig_r *byte
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (*byte)(C._wrap_Hash_verushash_hash_9b6d006aa466106b(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrHash) Verushash_v2(arg2 uintptr, arg3 int) (_swig_ret *byte) {
	var swig_r *byte
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (*byte)(C._wrap_Hash_verushash_v2_hash_9b6d006aa466106b(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrHash) Verushash_v2b(arg2 uintptr, arg3 int) (_swig_ret *byte) {
	var swig_r *byte
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (*byte)(C._wrap_Hash_verushash_v2b_hash_9b6d006aa466106b(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrHash) Verushash_v2b1(arg2 uintptr, arg3 int) (_swig_ret *byte) {
	var swig_r *byte
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (*byte)(C._wrap_Hash_verushash_v2b1_hash_9b6d006aa466106b(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2)))
	return swig_r
}

type Hash interface {
	Swigcptr() uintptr
	SwigIsHash()
	SetResult(arg2 *byte)
	GetResult() (_swig_ret *byte)
	Verushash(arg2 uintptr, arg3 int) (_swig_ret *byte)
	Verushash_v2(arg2 uintptr, arg3 int) (_swig_ret *byte)
	Verushash_v2b(arg2 uintptr, arg3 int) (_swig_ret *byte)
	Verushash_v2b1(arg2 uintptr, arg3 int) (_swig_ret *byte)
}


